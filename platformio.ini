; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir     = esp3d
build_dir   = .pioenvs
lib_dir     = libraries
libdeps_dir = .piolibdeps
data_dir = esp3d/data
default_envs = esp32-S2


[env:esp32dev]
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
board = esp32dev
framework = arduino
monitor_speed = 115200
monitor_flags = --echo 
monitor_filters = send_on_enter, colorize, esp32_exception_decoder
; set frequency to 240MHz
;board_build.f_cpu = 240000000L
; set frequency to 80MHz
;board_build.f_flash = 80000000L
;board_build.flash_mode = qio
board_build.arduino.upstream_packages = no
; None
build_flags =   -DCORE_DEBUG_LEVEL=5
                ; -DENABLE_DEDICATED_SPI
                ; -DESP_SD_SCK_PIN=18
                ; -DESP_SD_MISO_PIN=19
                ; -DESP_SD_MOSI_PIN=23 
board_build.partitions = min_spiffs.csv
upload_speed = 460800
extra_scripts = pre:platformIO/extra_script.py
lib_ignore = 
    ESPAsyncTCP

[env:esp32-S2]
;EXPERIMENTAL AND NOT WORKING FOR ME
;it seems it cannot write settings to flash and so go dead loop.
;No official support yet, check https://github.com/platformio/platform-espressif32/issues/619
;I currently use arduino IDE to build the project and upload it to the S2 board
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
board = esp32-s2-saola-1
framework = arduino
monitor_speed = 115200
monitor_flags = --echo
monitor_filters = send_on_enter, colorize, esp32_exception_decoder
board_build.f_cpu = 240000000L
board_build.mcu = esp32s2
; set frequency to 80MHz
board_build.f_flash = 80000000L
board_build.flash_mode = dio
; board_build.arduino.upstream_packages = no
; None
build_flags =   -DCORE_DEBUG_LEVEL=0
                -DARDUINO_USB_CDC_ON_BOOT=0 
                -DARDUINO_USB_MSC_ON_BOOT=0 
                -DARDUINO_USB_DFU_ON_BOOT=0
                -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
                -DESP_SD_SCK_PIN=7
                -DESP_SD_MISO_PIN=8
                -DESP_SD_MOSI_PIN=9
                -DENABLE_DEDICATED_SPI

board_build.partitions = min_spiffs.csv
upload_speed = 460800
extra_scripts = pre:platformIO/extra_script.py
lib_ignore = 
    TFT_eSPI 
;https://github.com/Bodmer/TFT_eSPI/issues/1246

[env:esp32devWiFiOnly]
platform = espressif32
board = esp32dev
framework = arduino
platform_packages =
    platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
monitor_speed = 115200
monitor_flags = --echo
monitor_filters = send_on_enter, colorize, esp32_exception_decoder
; set frequency to 240MHz
;board_build.f_cpu = 240000000L
; set frequency to 80MHz
;board_build.f_flash = 80000000L
;board_build.flash_mode = qio
; None
build_flags =   -DCORE_DEBUG_LEVEL=0
upload_speed = 460800
extra_scripts = pre:platformIO/extra_script.py
lib_ignore = 
    ESPAsyncTCP

[env:esp32cam]
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
board = esp32dev
framework = arduino
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
monitor_speed = 115200
monitor_flags = --echo
monitor_filters = send_on_enter, colorize, esp32_exception_decoder
; set frequency to 240MHz
;board_build.f_cpu = 240000000L
; set frequency to 80MHz
;board_build.f_flash = 80000000L
;board_build.flash_mode = qio
; None
build_flags =   -DCORE_DEBUG_LEVEL=0
                -DBOARD_HAS_PSRAM
                -mfix-esp32-psram-cache-issue
board_build.partitions = min_spiffs.csv
upload_speed = 460800
extra_scripts = pre:platformIO/extra_script.py
lib_ignore = 
    ESPAsyncTCP

[env:esp8266dev]
platform = https://github.com/platformio/platform-espressif8266.git
board = esp12e
framework = arduino
monitor_speed = 115200
monitor_flags = --echo 
monitor_filters = send_on_enter, colorize, esp8266_exception_decoder
; set frequency to 160MHz
board_build.f_cpu = 160000000L
; set frequency to 40MHz
board_build.f_flash = 40000000L
board_build.flash_mode = dout 
upload_resetmethod = nodemcu
board_build.ldscript = eagle.flash.4m2m.ld
build_flags = 
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
    -DNONOSDK221=1
    -DNDEBUG
    -DVTABLES_IN_FLASH
    -DWAVEFORM_LOCKED_PWM
upload_speed = 115200
extra_scripts = pre:platformIO/extra_script.py
lib_ignore = 
    AsyncTCP
    ESP32NetBIOS
    ESP32SSPD

[env:esp01s_160mhz]
platform = https://github.com/platformio/platform-espressif8266.git
board = esp12e
framework = arduino
monitor_speed = 115200
monitor_flags = --echo
monitor_filters = send_on_enter, colorize, esp8266_exception_decoder
; set frequency to 160MHz
board_build.f_cpu = 160000000L
; set frequency to 40MHz
board_build.f_flash = 40000000L
board_build.flash_mode = dout 
upload_resetmethod = ck
board_build.ldscript = eagle.flash.1m256.ld
build_flags = 
    -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
    -DNONOSDK221=1
    -DNDEBUG
    -DVTABLES_IN_FLASH
    -DWAVEFORM_LOCKED_PWM
upload_speed = 115200
extra_scripts = pre:platformIO/extra_script.py
lib_ignore = 
    AsyncTCP
    ESP32NetBIOS
    ESP32SSPD
